{"version":3,"sources":["assets/noPosterSmall.png","API.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","styled","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","Text","Message","text","color","Image","props","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upComing","loading","error","Helmet","map","movie","poster_path","original_title","vote_average","release_date","HomeContainer","state","a","data","results","this","setState","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","React","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","console","log","BackDrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","OverView","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","Header","header","List","ul","li","current","SLink","Link","withRouter","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21f4f435.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n    params: {\n        api_key: '2a8bcd9a7610b880c47734f46a4b2cd5',\n        language: 'en-US'\n    }\n})\n\nexport const moviesApi = {\n    nowPlaying: () => api.get('movie/now_playing'),\n    upComing: () => api.get('movie/upcoming'),\n    popular: () => api.get('movie/popular'),\n    movieDetail: (id) => api.get(`movie/${id}`, {\n        params: {\n            append_to_response: 'videos'\n        }\n    }),\n    search: (term) => api.get('search/movie', {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n}\n\nexport const tvApi = {\n    topRated: () => api.get('tv/top_rated'),\n    popular: () => api.get('tv/popular'),\n    airingToday: () => api.get('tv/airing_today'),\n    showDetail: (id) => api.get(`tv/${id}`, {\n        params: {\n            append_to_response: 'videos'\n        }\n    }),\n    search: (term) => api.get('search/tv', {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    :not(:last-child) {\n        margin-bottom: 50px;\n    }\n`;\n\nconst Title = styled.span`\n    font-size: 16px;\n    font-weight: 600;\n`;\n\nconst Grid = styled.div`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`;\n\nfunction Section({ title, children }) {\n    return (\n        <Container>\n            <Title>{title}</Title>\n            <Grid>{children}</Grid>\n        </Container>\n    );\n}\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n}\n\nexport default Section;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    font-size: 28px;\n    margin-top: 20px;\n`;\n\nconst Loader = () => <Container><span role='img' aria-label='Loading'>⏰</span></Container>;\n\nexport default Loader;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n`;\n\nconst Text = styled.span`\n    font-weight: 600;\n`;\n\nconst Message = ({ text, color }) => (\n    <Container>\n        <Text color={color}>\n            {text}\n        </Text>\n    </Container>\n);\n\nMessage.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n}\n\nexport default Message;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst Container = styled.div`\n    font-size: 12px;\n`;\n\nconst Image = styled.div`\n    background-image: url(${props => props.bgUrl});\n    background-size: cover;\n    height: 180px;\n    border-radius: 4px;\n    background-position: center center;\n    transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n    bottom: 5px;\n    right: 5px;\n    position: absolute;\n    opacity: 0;\n`;\n\nconst ImageContainer = styled.div`\n    margin-bottom: 5px;\n    position: relative;\n    &:hover {\n        ${Image}{\n            opacity: 0.3;\n        }\n        ${Rating}{\n            opacity: 1;\n        }\n    }\n`;\n\n\n\nconst Title = styled.span`\n    display: block;\n    margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n    font-size: 10px;\n    color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie }) => (\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n        <Container>\n            <ImageContainer>\n                <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : require('assets/noPosterSmall.png')}/>\n                    <Rating>\n                        <span role='img' aria-label='rating'>⭐️</span>{\" \"}{rating}/10\n                    </Rating>\n            </ImageContainer>\n            <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title }</Title>\n            <Year>{year}</Year>\n        </Container>\n    </Link>\n);\n\nPoster.propTypes = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool.isRequired\n}\n\nexport default Poster;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Helmet } from 'react-helmet';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upComing, loading, error }) => (\n    <div>\n        <Helmet>\n            <title>Movies | Nomflix</title>\n        </Helmet>\n        {loading ? <Loader/> : (\n            <Container>\n                { nowPlaying && nowPlaying.length > 0 && (\n                <Section title='Now Playing'>{nowPlaying.map((movie) => (\n                    <Poster key={movie.id} id={movie.id} imageUrl={movie.poster_path} title={movie.original_title} rating={movie.vote_average} year={movie.release_date && movie.release_date.substring(0, 4)} isMovie={true}/>\n                    ))}</Section>\n                )}\n                { upComing && upComing.length > 0 && (\n                <Section title='UpComing Movies'>{upComing.map((movie) => (\n                    <Poster key={movie.id} id={movie.id} imageUrl={movie.poster_path} title={movie.original_title} rating={movie.vote_average} year={movie.release_date && movie.release_date.substring(0, 4)} isMovie={true}/>\n                    ))}</Section>\n                )}\n                { popular && popular.length > 0 && (\n                <Section title='Popular Movies'>{popular.map((movie) => (\n                    <Poster key={movie.id} id={movie.id} imageUrl={movie.poster_path} title={movie.original_title} rating={movie.vote_average} year={movie.release_date && movie.release_date.substring(0, 4)} isMovie={true}/>\n                    ))}</Section>\n                )}\n                { error && <Message text={error} color='#e74c3c'></Message> }\n        </Container>\n        )}\n    </div>\n);\n\nHomePresenter.propTypes = {\n    nowPlaying: PropTypes.array,\n    popular: PropTypes.array,\n    upComing: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default HomePresenter;","import HomeContainer from 'Routes/Home/HomeContainer';\n\nexport default HomeContainer;","import { moviesApi } from 'API';\nimport React, { Component } from 'react';\nimport HomePresenter from 'Routes/Home/HomePresenter';\n\nclass HomeContainer extends Component {\n    state = {\n        nowPlaying: null,\n        upComing: null,\n        popular: null,\n        error: null,\n        loading: true\n    };\n    async componentDidMount() {\n        try {\n            const { data: { results: nowPlaying } } = await moviesApi.nowPlaying();\n            const { data: { results: upComing } } = await moviesApi.upComing();\n            const { data: { results: popular } } = await moviesApi.popular();\n            this.setState({\n                nowPlaying,\n                upComing,\n                popular\n            })\n        } catch {\n            this.setState({\n                error: \"Can't find movies information\"\n            });\n        } finally {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render(){\n        const { nowPlaying, upComing, popular, error, loading } = this.state;\n        return (\n            <HomePresenter nowPlaying={nowPlaying} upComing={upComing} popular={popular} error={error} loading={loading}/>\n        );\n    }\n}\n\nexport default HomeContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Helmet } from 'react-helmet';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n    <div>\n        <Helmet>\n            <title>TV Shows | Nomflix</title>\n        </Helmet>\n        {loading ? <Loader/> : (\n            <Container>\n                {topRated && topRated.length > 0 && (\n                <Section title='Top Rated Shows'>{topRated.map((show) => (\n                    <Poster key={show.id} id={show.id} imageUrl={show.poster_path} title={show.original_name} rating={show.vote_average} year={show.first_air_date && show.first_air_date.substring(0, 4)}/>\n                    ))}</Section>\n                )}\n                {popular && popular.length > 0 && (\n                <Section title='Popular Shows'>{popular.map((show) => (\n                    <Poster key={show.id} id={show.id} imageUrl={show.poster_path} title={show.original_name} rating={show.vote_average} year={show.first_air_date && show.first_air_date.substring(0, 4)}/>\n                    ))}</Section>\n                )}\n                {airingToday && airingToday.length > 0 && (\n                <Section title='Airing Today'>{airingToday.map((show) => (\n                    <Poster key={show.id} id={show.id} imageUrl={show.poster_path} title={show.original_name} rating={show.vote_average} year={show.first_air_date && show.first_air_date.substring(0, 4)}/>\n                    ))}</Section>\n                )}\n                { error && <Message text={error} color='#e74c3c'></Message> }\n            </Container>\n            )}\n    </div>\n);\n\n\nTVPresenter.propTypes = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default TVPresenter;","import TVContainer from 'Routes/TV/TVContainer';\n\nexport default TVContainer;","import { tvApi } from 'API';\nimport React from 'react';\nimport TVPresenter from 'Routes/TV/TVPresenter';\n\nclass TVContainer extends React.Component {\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        error: null,\n        loading: true\n    }\n    async componentDidMount() {\n        try {\n            const { data: { results: popular } } = await tvApi.popular();\n            const { data: { results: topRated} } = await tvApi.topRated();\n            const { data: { results: airingToday} } = await tvApi.airingToday();\n            this.setState({\n                popular,\n                topRated,\n                airingToday\n            })\n        } catch {\n            this.setState({\n                error: \"Can't find TV information.\"\n            })\n        } finally {\n            this.setState({\n                loading: false\n            })\n        }\n    }\n    render() {\n        const {topRated, popular, airingToday, error, loading } = this.state;\n        return (\n            <TVPresenter topRated={topRated} popular={popular} airingToday={airingToday} error={error} loading={loading}/>\n        );\n        \n    }\n}\n\nexport default TVContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Helmet } from 'react-helmet';\nimport Loader from 'Components/Loader';\nimport Section from 'Components/Section';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst Form = styled.form`\n    margin-bottom: 50px;\n    width: 100%;\n`;\n\nconst Input = styled.input`\n    all: unset;\n    font-size: 28px;\n    width: 100%;\n`;\n\nconst SearchPresenter = ({ movieResults, tvResults, searchTerm, loading, error, handleSubmit, updateTerm }) => (\n    <Container>\n        <Helmet>\n            <title>Search | Nomflix</title>\n        </Helmet>\n        <Form onSubmit={handleSubmit}>\n            <Input placeholder='Search Movies or TV Shows...' value={searchTerm} onChange={updateTerm}></Input>\n        </Form>\n        { loading ? <Loader/> : (\n            <div>\n                {movieResults && movieResults.length > 0 && (\n                    <Section title='Movie Results'>{movieResults.map((movie) => (\n                        <Poster key={movie.id} id={movie.id} imageUrl={movie.poster_path} title={movie.original_title} rating={movie.vote_average} year={movie.release_date && movie.release_date.substring(0, 4)} isMovie={true}/>\n                    ))}</Section>\n                )}\n                {tvResults && tvResults.length > 0 && (\n                    <Section title='TV Show Results'>{tvResults.map((show) => (\n                        <Poster key={show.id} id={show.id} imageUrl={show.poster_path} title={show.original_name} rating={show.vote_average} year={show.first_air_date && show.first_air_date.substring(0, 4)}/>\n                    ))}</Section>\n                )}\n                { error && <Message text={error} color='#e74c3c'></Message> }\n                { movieResults && tvResults && movieResults.length === 0 && tvResults.length === 0 && (\n                    <Message text='Noting found for' color='#95a5a6'></Message>\n                )}\n            </div>\n        )}\n    </Container>\n);\n\nSearchPresenter.propTypes = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    searchTerm: PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;","import SearchContainer from 'Routes/Search/SearchContainer';\n\nexport default SearchContainer;","import { moviesApi, tvApi } from 'API';\nimport React from 'react';\nimport SearchPresenter from 'Routes/Search/SearchPresenter';\n\nclass SearchContainer extends React.Component {\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: '',\n        error: null,\n        loading: false\n    };\n\n    componentDidMount() {\n        // this.handleSubmit();\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        const { searchTerm } = this.state;\n        if (searchTerm !== '') {\n            this.searchByTerm(searchTerm);\n        }\n    }\n\n    updateTerm = (event) => {\n        const { target: { value } } = event;\n        this.setState({\n            searchTerm: value\n        })\n    }\n\n    searchByTerm = async () => {\n        this.setState({loading: true});\n        const { searchTerm } = this.state;\n        try {\n            const { data: { results: movieResults} } = await moviesApi.search(searchTerm);\n            const { data: { results: tvResults} } = await tvApi.search(searchTerm);\n            this.setState({\n                movieResults,\n                tvResults\n            })\n            console.log(this.state);\n        } catch {\n            this.setState({\n                error: \"Can't find result\"\n            })\n        } finally {\n            this.setState({\n                loading: false\n            })\n        }\n    }\n\n    render() {\n        const {movieResults, tvResults, searchTerm, error, loading } = this.state;\n        return (\n            <SearchPresenter movieResults={movieResults} tvResults={tvResults} searchTerm={searchTerm} error={error} loading={loading} handleSubmit={this.handleSubmit} updateTerm={this.updateTerm}/>\n        );\n    }\n}\n\nexport default SearchContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from 'Components/Loader';\nimport { Helmet } from 'react-helmet';\nimport Message from 'Components/Message';\n\nconst Container = styled.div`\n    height: calc(100vh - 50px);\n    width: 100%;\n    position: relative;\n    padding: 50px;\n`;\n\nconst BackDrop = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    filter: blur(3px);\n    opacity: 0.5;\n    z-index: 0;\n`;\n\nconst Content = styled.div`\n    display: flex;\n    width: 100%;\n    position: relative;\n    z-index: 1;\n    height: 100%;\n`;\n\nconst Cover = styled.div`\n    width: 30%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    height: 100%;\n    border-radius: 5px;\n`;\n\nconst Data = styled.div`\n    width: 70%;\n    margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n    font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n    margin: 20px 0;\n`;\n\nconst Item = styled.span`\n\n`;\n\nconst Divider = styled.span`\n    margin: 0 10px;\n`;\n\nconst OverView = styled.p`\n    font-size: 12px;\n    opacity: 0.7;\n    line-height: 1.5;\n    width: 50%;\n`;\n\n\n\nconst DetailPresenter = ({ result, loading, error }) => (\n    loading ? (\n        <div>\n            <Helmet>\n                <title>Loading | Nomflix</title>\n            </Helmet>\n        <Loader/>\n        </div>\n    ) :\n    ( error ? <Message text={error}></Message> :\n        <div>\n            <Helmet>\n                <title>{result.original_title ? result.original_title : result.original_name} | Nomflix</title>\n            </Helmet>\n            <Container>\n                <BackDrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}/>\n                <Content>\n                    <Cover bgImage={result.poster_path ? `https://image.tmdb.org/t/p/original${result.backdrop_path}` : require('assets/noPosterSmall.png')}/>\n                    <Data>\n                    <Title>{result.original_title ? result.original_title : result.original_name}</Title>\n                    <ItemContainer>\n                        <Item>{result.release_date ? result.release_date.substring(0, 4) : result.first_air_date.substring(0, 4)}</Item>\n                        <Divider> </Divider>\n                        <Item>{result.runtime ? result.runtime : result.episode_run_time}</Item>\n                        <Divider> </Divider>\n                        <Item>{result.genres && result.genres.map((genre, index) => index === result.genres.length-1 ? genre.name : `${genre.name} / `)}</Item>\n                    </ItemContainer>\n                    <OverView>{result.overview}</OverView>\n                </Data>\n                </Content>\n            </Container>\n        </div>\n    )\n);\n\nDetailPresenter.propTypes = {\n    result: PropTypes.object,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default DetailPresenter;","import DetailContainer from 'Routes/Detail/DetailContainer';\n\nexport default DetailContainer;","import { moviesApi, tvApi } from 'API';\nimport React from 'react';\nimport DetailPresenter from 'Routes/Detail/DetailPresenter';\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n        const { location: { pathname } } = props;\n        this.state = {\n            result: null,\n            error: null,\n            loading: true,\n            isMovie: pathname.includes('/movie/')\n        };\n    }\n    \n\n    async componentDidMount() {\n        const { \n            match: { \n                params: { id } \n            },\n            history: { push }\n        } = this.props;\n        const { isMovie } = this.state;\n        const parsedId = parseInt(id);\n        if(isNaN(parsedId)) {\n            return push('/');\n        }\n        let result = null;\n        try {\n            if(isMovie) {\n                ({ data: result } = await moviesApi.movieDetail(parsedId));\n            } else {\n                ({ data: result } = await tvApi.showDetail(parsedId));\n            }\n        } catch {\n            this.setState({ error: \"Can't find anything\" })\n        } finally {\n            this.setState({ loading: false, result })\n        }\n    }\n\n    render() {\n        console.log(this.state)\n        const { result, error, loading } = this.state;\n        return (\n            <DetailPresenter result={result} error={error} loading={loading}/>\n        );\n    }\n}","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));","import React from \"react\";\nimport { HashRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\nimport Header from \"Components/Header\";\n\nexport default () => {\n    return (\n        <Router>\n            <Header/>\n            <Switch>\n                <Route path='/' exact component={Home}></Route>\n                <Route path='/tv' exact component={TV}></Route>\n                <Route path='/search' exact component={Search}></Route>\n                <Route path='/movie/:id' exact component={Detail}></Route>\n                <Route path='/show/:id' exact component={Detail}></Route>\n                <Redirect from='*' to='/'></Redirect>\n            </Switch>\n        </Router>\n    );\n}","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a {\n        text-decoration: none;\n        color: inherit;\n    }\n    * {\n        box-sizing: border-box;\n    }\n    body {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color: rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;","import React from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nfunction App () {\n  return (\n      <div>\n        <Router/>\n        <GlobalStyles/>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}